JDK = 개발 도구  Development Kit 
JRE = 개발 환경  Runtime Environment        
-->자바 개발 도구인 JDK를 이용해 개발된 프로그램은 JRE에 의해 가상의 컴퓨터인 JVM에서 구동된다.

메모리에서 스태틱영역 : 클래스의 놀이터 / 스택: 메서드의 놀이터 /  힙: 객체의 놀이터

객체 지향의 4대 특성: 캡상추다,   캡슐화, 상속, 추상화, 다형성
클래스는 분류에 대한 개념이지 실체가 아니다. 객체는 실체다!

*추상화*
추상화: 구체적인 것을 분해해서 관찰자가 관심있어하는 특성만 가지고 재조합 하는 것.(모델링) 
          --> 모델은 추상화를 통해 실제 사물을 단순하게 묘사하는 것.
객체: 유일무이한 사물.(==인스턴스)  / 클래스: 같은 특성을 지닌 여러 객체를 총칭하는 집합의 개념.

*상속*
하위클래스는 상위클래스다.  상속이라는 표현보다 확장한다는 말이 맞다.
객체 지향의 상속은 상위 클래스의 특성을 재사용,확장하는 것이다.  
인터페이스는 "무엇을 할 수 있는" 형태로 만들자.  *구현을 강제할 메서드를 제공.
Animal pingu = new Penguin(); 일경우  힙영역에 Animal과 Penguin 클래스의 인스턴스가 전부 생긴다.
--> 객체 참조 변수 pingu 가 가르키는 것은 힙 영역의 Animal.

*다형성*
오버라이딩: 상위클래스에서 정의된 메서드를 재정의 할 때 사용. 부모의 메서드 호출해도 하위클래스의 오버라이딩메서드 실행됨.
오버로딩: 함수명동일한데 인자만 달라지는거 표현할때 사용

추상 클래스 생성 이유 : 메서드 선언은 있으되 몸체는 없는 형태로 구현하고 싶을때. 
ex)abstract class 동물  abstract void 울기();    --> 펭귄, 쥐 이런건 우는거 extends로 구현해주면되는데, 동물은 어떻게 우는걸 안쓰고싶을때.
또한, 동물 클래스를 실수로 만드는거 방지,  오버라이딩 안했을경우 컴파일에러

자바는 하나의 클래스만 상속이 가능하기때문에,  각각 다른 추상클래스를 상속하는 클래스에 공통된 기능이 필요할 시
인터페이스 구현 public class Kevin extends Human implements Programmer, Swimable   
왜 인터페이스 대신에 추상메서드를 사용하냐?  공통으로 필요한 기능들도 모든 클래스에서 오버라이딩 하여 재정의 해야하는 번거로움

추상클래스 사용 시기 : 상속 관계를 쭉 타고 올라갔을때 같은 조상클래스를 상속하는데 기능까지 완변히 똑같은 기능이 필요한 경우
(ex. attack, printInfo)
인터페이스 사용 시기 : 상속 관계를 쭉 타고 올라갔을때 다른 조상클래스를 상속하는데 같은 기능이 필요할 경우 인터페이스 사용
(ex. Swimable)

