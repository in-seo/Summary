SQL이 문자열 쓸때 '' 쓰는 이유 : 다른 프로그래밍 언어에 쓰일때  sql자체가 문자열로인용될수도있어서

SELECT :질의 결과 추출되는 속성 리스트를 열거
FROM  :질의에 어느 테이블이 사용되는지 열거
WHERE :질의의 조건 작성

where 절에 두 개 이상의 값을 비교하려면 IN 연산자 사용. 
-->IN연산자 = 집합의 원소인지 판단하는 연산자
ex) select * from Book where publisher IN ('굿스포츠','대한미디어');
-->LIKE연산자 = 문자열 찾을때.

%축구% ==> 축구가 포함된 도서를 찾음.

집계 함수 : SUM,AVG,MIN,MAX,COUNT
GROUP BY : 속성 값이 같은 값끼리 그룹을 만들 수 있다.

join 할 때는 where 대신 조건 절에 on 을 사용한다.
뷰 : 보기 편하라고 만든 가상 테이블


인덱스 : 데이터베이스 테이블에 대한 검색 성능의 속도를 높여주는 자료구조. (SQL 튜닝에쓰임)
인덱스를 사용하는 이유 : 데이터들이 정렬이 되어있어서 Where 절, Order by 절, MIN,MAX  처리 쉬움.
	            단점 : 정렬된 상태를 계속 유지 시켜주어야 해서  

인덱스 테이블 생성
TABLE을 생성 할 때, PRIMARY_KEY를 지정한 컬럼은 자동적으로 PRIMARY_KEY를 기준으로 인덱스 테이블이 생성됩니다.
DBMS는 인덱스로 지정한 컬럼 데이터와 ROW-ID로 구성된 최소한의 노드로 B+트리를 구성
--조건절에 자주 등장하는 컬럼
--LIKE 검색보다는 = 으로 검색하는 컬럼
--ORDER BY 절에서 자주 사용되는 컬럼
--JOIN으로 자주 사용되는 컬럼








------------------------------------------------요약----------------------------------------------------
데이터 정의어 : create, alter, drop
데이터 조작어 : select, insert, delete, update

